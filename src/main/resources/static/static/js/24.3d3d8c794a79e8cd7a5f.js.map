{"version":3,"sources":["webpack:///src/views/ClusterManager/Info.vue","webpack:///./src/views/ClusterManager/Info.vue?04bf","webpack:///./src/views/ClusterManager/Info.vue"],"names":["Info","data","bootstrap","servers","bootstrap_servers","home","clusterInfo","controller","port","idString","host","id","nodes","clusterId","authorizedOperations","mounted","created","this","getKafkaBootstrapServers","watch","methods","queryBase","self","$http","get","api","getCluster","params","bootstrap.servers","response","code","content","$message","type","message","duration","msg","deleteByPrimaryKey","$confirm","confirmButtonText","cancelButtonText","center","then","deleteTBlogByPrimaryKey","console","log","routerToConfigsView","queryStr","window","open","routerToTopicManagerList","routerToEdit","routerToAdd","searchEvent","searchRest","search","title","img","time","lookSum","ClusterManager_Info","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","inline","size","label","placeholder","model","value","callback","$$v","$set","expression","_l","item","index","key","_v","on","click","$event","_m","_s","_e","info","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/24.3d3d8c794a79e8cd7a5f.js","sourcesContent":["<template>\r\n    <div class=\"app-container\">\r\n        <div class=\"mt20\">\r\n            <el-form :inline=\"true\" size=\"mini\">\r\n                <el-form-item label=\"bootstrap.servers\">\r\n                    <el-select v-model=\"bootstrap.servers\" placeholder=\"请输入kafka地址:\">\r\n                        <el-option v-for=\"(item,index) in bootstrap_servers\" :key=\"item\" :label=\"index\"\r\n                                   :value=\"item\">\r\n                        </el-option>\r\n                    </el-select>\r\n                </el-form-item>\r\n                <el-form-item>\r\n                    <el-button type=\"primary\" class=\"el-button-search\" @click=\"searchEvent()\">查询</el-button>\r\n                </el-form-item>\r\n            </el-form>\r\n        </div>\r\n        <div class=\"app-list\">\r\n            <div class=\"app-tab\">\r\n                <h5 class=\"form-tit\">cluster的信息</h5>\r\n                <table>\r\n                    <thead>\r\n                    <tr>\r\n                        <th>id</th>\r\n                        <!--显示的字段 - 英文-->\r\n                        <th>ClusterId</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tr>\r\n                        <th>序号</th>\r\n                        <th>集群id</th>\r\n                    </tr>\r\n\r\n                    <tbody>\r\n                    <tr>\r\n                        <template v-if=\"clusterInfo.clusterId\">\r\n                            <td>1</td>\r\n                            <!--显示的字段 - 具体数据-->\r\n                            <td>{{clusterInfo.clusterId}}</td>\r\n                        </template>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n                <hr>\r\n                <h5 class=\"form-tit\">controller(kafka控制器,多个broker中选举一个)</h5>\r\n                <table>\r\n                    <thead>\r\n                    <tr>\r\n                        <th>id</th>\r\n                        <!--显示的字段 - 英文-->\r\n                        <th>port</th>\r\n                        <th>idString</th>\r\n                        <th>host</th>\r\n                        <th>id</th>\r\n                        <th>操作</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tr>\r\n                        <th>序号</th>\r\n                        <th>端口号</th>\r\n                        <th>idString</th>\r\n                        <th>host</th>\r\n                        <th>id</th>\r\n                        <th>操作</th>\r\n                    </tr>\r\n\r\n                    <tbody>\r\n                    <tr>\r\n                        <template v-if=\"clusterInfo.controller.host\">\r\n                            <td>1</td>\r\n                            <td>{{clusterInfo.controller.port}}</td>\r\n                            <td>{{clusterInfo.controller.idString}}</td>\r\n                            <td>{{clusterInfo.controller.host}}</td>\r\n                            <td>{{clusterInfo.controller.id}}</td>\r\n                            <td>\r\n                                <span @click=\"routerToConfigsView(bootstrap.servers)\">查看Config</span>\r\n                                <span @click=\"routerToTopicManagerList(bootstrap.servers)\">查看Topic</span>\r\n                            </td>\r\n                        </template>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n                <hr>\r\n                <h5 class=\"form-tit\">Nodes(kafka的所有broker节点)</h5>\r\n                <table>\r\n                    <thead>\r\n                    <tr>\r\n                        <th>id</th>\r\n                        <!--显示的字段 - 英文-->\r\n                        <th>port</th>\r\n                        <th>idString</th>\r\n                        <th>host</th>\r\n                        <th>id</th>\r\n                        <th>操作</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tr>\r\n                        <th>序号</th>\r\n                        <th>端口号</th>\r\n                        <th>idString</th>\r\n                        <th>host</th>\r\n                        <th>id</th>\r\n                        <th>操作</th>\r\n                    </tr>\r\n\r\n                    <tbody>\r\n                    <template v-if=\"clusterInfo.nodes\">\r\n                        <tr v-for=\"(info,index) in clusterInfo.nodes\">\r\n                            <td>{{index+1}}</td>\r\n                            <td>{{info.port}}</td>\r\n                            <td>{{info.idString}}</td>\r\n                            <td>{{info.host}}</td>\r\n                            <td>{{info.id}}</td>\r\n                            <td>\r\n                                <span @click=\"routerToConfigsView(bootstrap.servers)\">查看Config</span>\r\n                                <span @click=\"routerToTopicManagerList(bootstrap.servers)\">查看Topic</span>\r\n                            </td>\r\n                        </tr>\r\n                    </template>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\n\r\n    export default {\r\n        data() {\r\n            return {\r\n                bootstrap: {\r\n                    servers: '192.168.0.105:9092'\r\n                },\r\n                bootstrap_servers: {\r\n                    \"home\": \"192.168.0.105:9092\"\r\n                },\r\n                clusterInfo: {\r\n                    controller: {\r\n                        port: 9092,\r\n                        idString: \"xx\",\r\n                        host: \"192.168.0.105\",\r\n                        id: 0\r\n                    },\r\n                    nodes: [\r\n                        {\r\n                            port: 9092,\r\n                            idString: \"xx\",\r\n                            host: \"192.168.0.105\",\r\n                            id: 0\r\n                        }\r\n                    ],\r\n                    clusterId: \"1\",\r\n                    authorizedOperations: []\r\n                }\r\n            }\r\n        },\r\n        mounted() {\r\n            let self = this;\r\n        },\r\n        created() {\r\n            // this.queryBase();\r\n            let self = this;\r\n            self.clusterInfo.controller = {};\r\n            self.clusterInfo.nodes = {};\r\n            self.clusterInfo.clusterId = '';\r\n            self.bootstrap = {};\r\n            self.bootstrap_servers = {};\r\n            this.getKafkaBootstrapServers();\r\n        },\r\n        watch: {},\r\n        methods: {//获取具体的配置\r\n            queryBase() {\r\n                let self = this;\r\n                self.$http.get(self.api.getCluster, {\r\n                    params: {\r\n                        'bootstrap.servers': self.bootstrap.servers\r\n                    }\r\n                }, function (response) {\r\n\r\n                    if (response.code == 0) {\r\n                        self.clusterInfo = response.content;\r\n                        self.$message({\r\n                            type: 'success',\r\n                            message: '查询成功',\r\n                            duration: 2000\r\n                        });\r\n                    } else {\r\n                        self.$message({\r\n                            type: 'error',\r\n                            message: response.msg,\r\n                            duration: 2000\r\n                        });\r\n                    }\r\n                }, function (response) {\r\n                    //失败回调\r\n                    self.$message({\r\n                        type: 'warning',\r\n                        message: '请求异常',\r\n                        duration: 1000\r\n                    });\r\n                })\r\n\r\n            },\r\n            getKafkaBootstrapServers() {\r\n                let self = this;\r\n                self.$http.get(self.api.getKafkaBootstrapServers, {}, function (response) {\r\n                    if (response.code == 0) {\r\n                        self.bootstrap_servers = response.content;\r\n                        self.$message({\r\n                            type: 'success',\r\n                            message: '查询成功',\r\n                            duration: 2000\r\n                        });\r\n                    } else {\r\n                        self.$message({\r\n                            type: 'error',\r\n                            message: response.msg,\r\n                            duration: 2000\r\n                        });\r\n                    }\r\n                }, function (response) {\r\n                    //失败回调\r\n                    self.$message({\r\n                        type: 'warning',\r\n                        message: '请求异常',\r\n                        duration: 1000\r\n                    });\r\n                })\r\n            },\r\n            deleteByPrimaryKey(id) {\r\n                let self = this;\r\n                this.$confirm('是否删除该条数据？', '提示', {\r\n                    confirmButtonText: '确定',\r\n                    cancelButtonText: '取消',\r\n                    center: true\r\n                }).then(() => {\r\n                    self.$http.get(self.api.deleteTBlogByPrimaryKey\r\n                        , {\r\n                            params: {\r\n                                id: id\r\n                            }\r\n                        },\r\n                        function (response) {\r\n                            if (response.code == 0) {\r\n                                if (response.content == true) {\r\n                                    self.$message({\r\n                                        type: 'success',\r\n                                        message: '删除成功',\r\n                                        duration: 2000\r\n                                    });\r\n                                    self.queryBase();\r\n                                } else {\r\n                                    self.$message({\r\n                                        type: 'warning',\r\n                                        message: '删除失败',\r\n                                        duration: 2000\r\n                                    });\r\n\r\n                                }\r\n                            } else {\r\n                                self.$message({\r\n                                    type: 'error',\r\n                                    message: response.msg,\r\n                                    duration: 2000\r\n                                });\r\n                            }\r\n                        },\r\n                        function (response) {\r\n                            console.log(response);\r\n                            //失败回调\r\n                            self.$message({\r\n                                type: 'error',\r\n                                message: \"请求异常\",\r\n                                duration: 2000\r\n                            });\r\n                        }\r\n                    )\r\n\r\n                })\r\n            },\r\n            routerToConfigsView(bootstrap_servers) {\r\n                //跳转携带参数\r\n                let queryStr = \"\";\r\n                queryStr = queryStr + \"bootstrap_servers=\" + bootstrap_servers + \"\";\r\n                window.open(\"#/BrokerManagerConfigsView\" + \"?\" + queryStr, '_blank');\r\n            },\r\n            routerToTopicManagerList(bootstrap_servers) {\r\n                //跳转携带参数\r\n                let queryStr = \"\";\r\n                queryStr = queryStr + \"bootstrap_servers=\" + bootstrap_servers + \"\";\r\n                window.open(\"#/TopicManagerList\" + \"?\" + queryStr, '_blank');\r\n            },\r\n            routerToEdit(id) {\r\n                //跳转携带参数\r\n                let queryStr = \"\";\r\n                queryStr = queryStr + \"id=\" + id + \"\";\r\n                //跳转携带参数\r\n                window.open(\"#/TBlogModuleEdit\" + \"?\" + queryStr, '_self');\r\n            },\r\n            routerToAdd() {\r\n                window.open(\"#/TBlogModuleAdd\", '_self');\r\n            },\r\n            searchEvent() {\r\n                this.queryBase();\r\n            },\r\n            searchRest() {\r\n                let self = this;\r\n                self.search.id = '';\r\n                self.search.title = '';\r\n                self.search.img = '';\r\n                self.search.time = '';\r\n                self.search.type = '';\r\n                self.search.lookSum = '';\r\n                self.search.content = '';\r\n                this.queryBase();\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n</script>\r\n\r\n<style rel=\"stylesheet/scss\" lang=\"scss\">\r\n    .video-detail {\r\n\r\n        p {\r\n            display: inline-block;\r\n            width: 40%;\r\n            vertical-align: top;\r\n        }\r\n\r\n        label {\r\n            width: 120px;\r\n            display: inline-block;\r\n        }\r\n\r\n        span {\r\n            color: #888;\r\n        }\r\n\r\n    }\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/ClusterManager/Info.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"app-container\"},[_c('div',{staticClass:\"mt20\"},[_c('el-form',{attrs:{\"inline\":true,\"size\":\"mini\"}},[_c('el-form-item',{attrs:{\"label\":\"bootstrap.servers\"}},[_c('el-select',{attrs:{\"placeholder\":\"请输入kafka地址:\"},model:{value:(_vm.bootstrap.servers),callback:function ($$v) {_vm.$set(_vm.bootstrap, \"servers\", $$v)},expression:\"bootstrap.servers\"}},_vm._l((_vm.bootstrap_servers),function(item,index){return _c('el-option',{key:item,attrs:{\"label\":index,\"value\":item}})}),1)],1),_vm._v(\" \"),_c('el-form-item',[_c('el-button',{staticClass:\"el-button-search\",attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.searchEvent()}}},[_vm._v(\"查询\")])],1)],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"app-list\"},[_c('div',{staticClass:\"app-tab\"},[_c('h5',{staticClass:\"form-tit\"},[_vm._v(\"cluster的信息\")]),_vm._v(\" \"),_c('table',[_vm._m(0),_vm._v(\" \"),_vm._m(1),_vm._v(\" \"),_c('tbody',[_c('tr',[(_vm.clusterInfo.clusterId)?[_c('td',[_vm._v(\"1\")]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(_vm.clusterInfo.clusterId))])]:_vm._e()],2)])]),_vm._v(\" \"),_c('hr'),_vm._v(\" \"),_c('h5',{staticClass:\"form-tit\"},[_vm._v(\"controller(kafka控制器,多个broker中选举一个)\")]),_vm._v(\" \"),_c('table',[_vm._m(2),_vm._v(\" \"),_vm._m(3),_vm._v(\" \"),_c('tbody',[_c('tr',[(_vm.clusterInfo.controller.host)?[_c('td',[_vm._v(\"1\")]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(_vm.clusterInfo.controller.port))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(_vm.clusterInfo.controller.idString))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(_vm.clusterInfo.controller.host))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(_vm.clusterInfo.controller.id))]),_vm._v(\" \"),_c('td',[_c('span',{on:{\"click\":function($event){return _vm.routerToConfigsView(_vm.bootstrap.servers)}}},[_vm._v(\"查看Config\")]),_vm._v(\" \"),_c('span',{on:{\"click\":function($event){return _vm.routerToTopicManagerList(_vm.bootstrap.servers)}}},[_vm._v(\"查看Topic\")])])]:_vm._e()],2)])]),_vm._v(\" \"),_c('hr'),_vm._v(\" \"),_c('h5',{staticClass:\"form-tit\"},[_vm._v(\"Nodes(kafka的所有broker节点)\")]),_vm._v(\" \"),_c('table',[_vm._m(4),_vm._v(\" \"),_vm._m(5),_vm._v(\" \"),_c('tbody',[(_vm.clusterInfo.nodes)?_vm._l((_vm.clusterInfo.nodes),function(info,index){return _c('tr',[_c('td',[_vm._v(_vm._s(index+1))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(info.port))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(info.idString))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(info.host))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(info.id))]),_vm._v(\" \"),_c('td',[_c('span',{on:{\"click\":function($event){return _vm.routerToConfigsView(_vm.bootstrap.servers)}}},[_vm._v(\"查看Config\")]),_vm._v(\" \"),_c('span',{on:{\"click\":function($event){return _vm.routerToTopicManagerList(_vm.bootstrap.servers)}}},[_vm._v(\"查看Topic\")])])])}):_vm._e()],2)])])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('thead',[_c('tr',[_c('th',[_vm._v(\"id\")]),_vm._v(\" \"),_c('th',[_vm._v(\"ClusterId\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('tr',[_c('th',[_vm._v(\"序号\")]),_vm._v(\" \"),_c('th',[_vm._v(\"集群id\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('thead',[_c('tr',[_c('th',[_vm._v(\"id\")]),_vm._v(\" \"),_c('th',[_vm._v(\"port\")]),_vm._v(\" \"),_c('th',[_vm._v(\"idString\")]),_vm._v(\" \"),_c('th',[_vm._v(\"host\")]),_vm._v(\" \"),_c('th',[_vm._v(\"id\")]),_vm._v(\" \"),_c('th',[_vm._v(\"操作\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('tr',[_c('th',[_vm._v(\"序号\")]),_vm._v(\" \"),_c('th',[_vm._v(\"端口号\")]),_vm._v(\" \"),_c('th',[_vm._v(\"idString\")]),_vm._v(\" \"),_c('th',[_vm._v(\"host\")]),_vm._v(\" \"),_c('th',[_vm._v(\"id\")]),_vm._v(\" \"),_c('th',[_vm._v(\"操作\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('thead',[_c('tr',[_c('th',[_vm._v(\"id\")]),_vm._v(\" \"),_c('th',[_vm._v(\"port\")]),_vm._v(\" \"),_c('th',[_vm._v(\"idString\")]),_vm._v(\" \"),_c('th',[_vm._v(\"host\")]),_vm._v(\" \"),_c('th',[_vm._v(\"id\")]),_vm._v(\" \"),_c('th',[_vm._v(\"操作\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('tr',[_c('th',[_vm._v(\"序号\")]),_vm._v(\" \"),_c('th',[_vm._v(\"端口号\")]),_vm._v(\" \"),_c('th',[_vm._v(\"idString\")]),_vm._v(\" \"),_c('th',[_vm._v(\"host\")]),_vm._v(\" \"),_c('th',[_vm._v(\"id\")]),_vm._v(\" \"),_c('th',[_vm._v(\"操作\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-04070124\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/ClusterManager/Info.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-04070124\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Info.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Info.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Info.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-04070124\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Info.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/ClusterManager/Info.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}