server.port=8787
server.servlet.context-path=/demo_kafka
#Spring kafka
#spring.kafka.consumer.bootstrap-servers=10.200.3.34:9092,10.200.3.105:9092,10.200.6.217:9092
spring.kafka.consumer.bootstrap-servers=10.202.16.136:9092
#spring.kafka.consumer.bootstrap-servers=192.168.0.105:9092
#spring.kafka.consumer.group-id=common_imp_db_test
#key-value
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
##
spring.kafka.consumer.auto-offset-reset=earliest
#kafka
#kafk---------------
#spring.kafka.producer.bootstrap-servers=110.200.3.34:9092,10.200.3.105:9092,10.200.6.217:9092
spring.kafka.producer.bootstrap-servers=10.200.126.163:9092
#spring.kafka.producer.bootstrap-servers=192.168.0.105:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.batch-size=1
spring.kafka.producer.buffer-memory=524288
spring.kafka.producer.acks=all
#kafka---------------
allowableValues=10.200.126.163:9092,10.202.16.136:9092,192.168.0.105:9092,10.200.3.34:9092
#bootstrap_servers
bootstrap_servers={'dev':'10.200.126.163:9092','dev_my':'10.202.16.136:9092','home':'192.168.0.105:9092'}
spring.servlet.multipart.max-file-size=1073741824
spring.servlet.multipart.max-request-size=1073741824

